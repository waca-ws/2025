---
- day: June 20<sup>th</sup>
  color: "#a3d7ff"
  theme: "Whole-day Workshop Program"
  events:
    
    - title: Opening
      from: "09:00"
      to: "09:05"
      authors:
        - name: Giuseppe de Palma and Saverio Giallorenzo
          title: Chairs
      description: The chairs welcome all attendees at WACA 2025 and provide information on the organisation of the event

    - title: "<strong>Keynote</strong> — Environmentally Sustainable Microservices: From Design to Operation"
      link: 
      slides: 
      from: "09:05"
      to: "10:00"
      authors:
        - name: Jacopo Soldani
          title: Keynote Speaker
      description: |
        As digital infrastructure grows, addressing the carbon footprint and resilience of software systems is increasingly critical. This keynote presents a unified approach to sustainable microservices, combining recent advances in carbon-aware software and resilient Cloud-Edge deployments. We begin with a framework for interactive services that adapt to carbon intensity forecasts and workload variations, achieving up to 50% emission reductions while maintaining quality. Building on this, we introduce FREEDA—a research initiative focused on sustainable, failure-resilient microservices across the Cloud-IoT continuum. FREEDA employs a declarative method for generating deployment constraints, enabling DevOps teams to optimize resilience and sustainability from the outset. By aligning service-level carbon awareness with infrastructure-level strategies, this talk outlines a lifecycle approach to environmentally sustainable microservices.
    
    - title: Optimal configuration of API resources in cloud native computing
      link: papers/WACA2025_paper_2.pdf
      slides: 
      from: "10:00"
      to: "10:30"
      authors:
        - name: Eddy Truyen and Wouter Joosen
          title: Authors
      description: | 
        This paper presents how an existing framework for offline performance optimization can be applied to microservice applications during the Release phase of the DevOps life cycle. Optimization of resource allocation during the Release phase remains a largely unexplored problem as most research has focused on intelligent scheduling and autoscaling of microservices in the production environment. Yet horizontal auto-scaling of containers, based on CPU usage for instance, may still leave these containers with an inappropriately configured amount of memory, if no upfront finetuning of both resources is applied. We evaluate the framework using the TeaStore microservice application and statistically compare different optimization algorithms, supporting informed decisions about their trade-offs between sampling cost and distance to the most optimal configuration. This shows that upfront screening for reducing the search space is helpful when the goal is to find the optimal resource configuration as found in exhaustive search. When the goal is to statistically compare different algorithms with respect to the optimal configuration, screening must also be applied to make data collection of all data points in the search space feasible. If the goal is to find a near-optimal configuration within a limited sampling budget, it is better to run bayesian optimization without screening.

    - title: Coffee Break
      from: "10:30"
      to: "11:00"

    - title: The Adaptable TeaStore Specification
      link: 
      slides: 
      from: "11:00"
      to: "11:30"
      authors:
        - name: Zemtsop Ndadji Brice Arléon
          title: Authors
      description: |
        A presentation on the Adaptable TeaStore Specification and Implementation.

    - title: "AdaptiFlow: An Extensible Framework for Event-Driven Autonomy in Cloud Microservices"
      link: papers/WACA2025_paper_8.pdf
      slides: 
      from: "11:30"
      to: "12:00"
      authors:
        - name: Zemtsop Ndadji Brice Arléon, Bliudze Simon and Quinton Clément
          title: Authors
      description: | 
        Modern cloud architectures demand self-adaptive capabilities to manage dynamic operational conditions, yet existing solutions often impose centralized control models ill-suited to microservices' decentralized nature. This paper presents AdaptiFlow, a framework that reimagines autonomic computing through abstraction layers focused on the Monitor and Execute phases of the MAPE-K loop. By decoupling metrics collection and action execution from adaptation logic, AdaptiFlow enables microservices to evolve into autonomous elements through standardized interfaces, preserving their architectural independence while enabling system-wide adaptability. The framework introduces: (1) Metrics Collectors for unified infrastructure/business metric gathering, (2) Adaptation Actions as declarative actuators for runtime adjustments, and (3) a lightweight Event-Driven and rule-based mechanism for adaptation logic specification. Validation through the enhanced Adaptable TeaStore benchmark demonstrates practical implementation of three adaptation scenarios targeting three levels of  autonomy—self-healing (database recovery), self-protection (DDoS mitigation), and self-optimization (traffic management)—with minimal code modification per service. Key innovations include a workflow for gradual service instrumentation and evidence that decentralized adaptation can emerge from localized decisions without global  coordination. The work bridges au tonomic computing theory with cloud-native practice, providing both a conceptual framework and concrete tools for building resilient distributed systems. Future work includes integration with for mal coordination models like JavaBIP to avoid conflicting adaptation scenarios and improved AI agents techniques using AWARE for proactive adaptations.
    
    - title: "Fancy some Chips for your TeaStore? Modeling the control of an adaptable discrete system"
      link: papers/WACA2025_paper_5.pdf
      slides: 
      from: "12:00"
      to: "12:30"
      authors:
        - name: Anna Gallone, Simon Bliudze, Sophie Cerf and Olga Kouchnarenko
          title: Authors
      description: | 
        When designing new web applications, developers must cope with different kinds of constraints relative to the resources they rely on: software, hardware, network, online microservices, or any combination of the mentioned entities. Together, these entities form a complex system of communicating interdependent processes, physical or logical. It is very desirable that such system ensure its robustness to provide a good quality of service. Chips is a language that aims at facilitating the design of models made of various entwined components. It allows the description of applications in the form of functional blocks. Chips mixes formalisms from control theory and general purpose programming languages to generate robust models in the BIP framework. This document presents how to use Chips to systematically analyze, design and model a complex system project, using a variation of the Adaptable TeaStore application as a running example.

    - title: Lunch
      from: "12:30"
      to: "14:00"
    
    - title: "Adaptable Teastore with Energy Consumption Awareness: A Case Study"
      link: papers/WACA2025_paper_7.pdf
      slides: 
      from: "14:00"
      to: "14:30"
      authors:
        - name: Henrique De Medeiros, Denisse Muñante, Sophie Chabridon, César Perdigão Batista and Denis Conan
          title: Authors
      description: | 
        Global energy consumption has been steadily increasing in the recent years, with data centres emerging as major contributors. This growth is largely driven by the widespread migration of applications to the Cloud, alongside a rising number of users consuming digital content. One way for reducing the energy consumption of data centers involves improving the energy efficiency of the deployed software applications. This implies design time and runtime approaches with self-adaptive applications. Although various strategies have been proposed, there is limited research comparing the architectural tactics employed in self-adaptive applications. In particular, there is a lack of evaluation regarding the energy consumption impact of architectural variants proposed in Cloud applications. To address this gap, we propose a framework to integrate variants in the implementation of applications and allow to choose one particular variant according to its associated energy consumption at runtime. We add a monitor component to a Cloud application to track the energy usage of application containers and select adaptations according to the energy consumption of a microservice. We have performed an empirical study on the Adaptable TeaStore application in a scenario of workload traffic on a node within the Grid5000 testbed. We assess the energy consumption of variants of the recommendation algorithm proposed by the TeaStore application, and we propose a functional level adaptation by analysing the behaviour of the application. First results show some potential improvements on the energy efficiency of cloud applications at runtime.
    
    - title: Adaptability as a Programming Pattern in SEArch
      link: papers/WACA2025_paper_3.pdf
      slides: 
      from: "14:30"
      to: "15:00"
      authors:
        - name: Carlos Gustavo Lopez Pombo, Pablo Montepagano and Emilio Tuosto
          title: Authors
      description: | 
        We recently introduced an execution infrastructure for service-based software dubbed SEArch, after Service Execution Architecture. SEArch is a language-independent execution infrastructure capable of performing transparent dynamic reconfiguration of software artefacts. We argue here that our framework can be used to support adaptability. Our conviction is grounded on the underlying execution model of SEArch which hinges on a service broker that procures services at run-time based on formal contracts specified by components that "consume" services. Therefore, cloud applications can adapt to dynamic changes by modifying the contracts used to search for the services by-need.

    - title: "Adaptable TeaStore: A Choreographic Approach"
      link: papers/WACA2025_paper_6.pdf
      slides: 
      from: "15:00"
      to: "15:30"
      authors:
        - name: Giuseppe De Palma, Saverio Giallorenzo, Ivan Lanese and Gianluigi Zavattaro
          title: Authors
      description: | 
        Adaptable TeaStore has been recently proposed as a reference model for adaptable microservice architecture. It includes different configurations, as well as scenarios requiring to transition between them. We describe an implementation of the Adaptable TeaStore based on AIOCJ, a choreographic language allowing one to program multiparty systems which can adapt at runtime to different conditions. Following the choreographic tradition, AIOCJ ensures by construction correctness of communications (e.g., no deadlocks) before, during, and after adaptation. Adaptation is dynamic, and the adaptation scenarios need to be fully specified only at runtime. Using AIOCJ to model the Adaptable TeaStore, we showcase the strengths of the approach and its current limitations, providing suggestions for future directions for refining the paradigm (and the AIOCJ language in particular), to better align it with real-world Cloud architectures.

    - title: Decoupling adaptive control in TeaStore
      link: papers/WACA2025_paper_4.pdf
      slides: 
      from: "15:30"
      to: "16:00"
      authors:
        - name: Eddy Truyen 
          title: Authors
      description: | 
        The Adaptable TeaStore extends the TeaStore microservice application by embedding a self-adaptive control loop within each service, enabling dynamic monitoring of runtime events and adaptation through modular effectors. While effective and in line with the desire to have a high decoupling between microservices, the proposed approach applies effectors for adaptation per container and instantaneously, whereas some effectors should be applied to all replicas of a microservice deployment in a planned approach. Behavioral variations activated by effectors may also require invasive changes in the core business functionality of the Teastore code. In this implementation discussion paper, we investigate how legacy modularization techniques, software architectural methods, and the Operator pattern can decouple the control logic from the application. We discuss when their particular trade-off between fine-grained expressive adaptation and system-wide control and reuse of adaptation strategies can pay off.

    - title: Coffee Break
      from: "16:00"
      to: "16:30"

    - title: "Adaptable Cloud Architectures: Takeaways and Networking"
      link: 
      slides: 
      from: "16:30"
      to: "17:30"
      description: | 
        Participants discuss on key takeaways from the workshop and explore how to apply their newfound knowledge to future projects. Attendees connect with peers, exchange ideas, and discuss potential collaborations. The focus will be on fostering meaningful relationships and identifying opportunities for joint ventures or initiatives.

    - title: Closing reception
      from: "18:00"
      to: "20:30"
      description:
